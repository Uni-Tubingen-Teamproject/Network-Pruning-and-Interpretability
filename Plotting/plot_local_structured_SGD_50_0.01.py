import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np

# Daten
pruning_rates = [0.19134368949424185, 0.3822005349688308,
                 0.5728195543418653, 0.7636763998164542]
accuracies_after_pruning = [0.00368, 0.001, 0.001, 0.001]
accuracies_after_retraining = [
    [0.00368, 0.43686, 0.45984, 0.48992, 0.52666, 0.53298, 0.54808, 0.5615, 0.56272, 0.57864, 0.5812, 0.60802, 0.60594, 0.61058, 0.62122, 0.62978, 0.63302, 0.63926, 0.64678, 0.6482, 0.65542, 0.65848, 0.66564, 0.66168, 0.66886, 0.67382,
        0.67668, 0.67986, 0.6814, 0.68226, 0.6842, 0.68712, 0.68854, 0.69136, 0.6941, 0.69322, 0.69436, 0.69362, 0.69614, 0.69638, 0.69638, 0.69772, 0.6992, 0.69908, 0.69888, 0.69958, 0.70092, 0.6997, 0.70112, 0.7022, 0.70054],
    [0.001, 0.32278, 0.39678, 0.43464, 0.44684, 0.46294, 0.49418, 0.50518, 0.52098, 0.52978, 0.53578, 0.55346, 0.55232, 0.56704, 0.5712, 0.5794, 0.59186, 0.58886, 0.60154, 0.60876, 0.61424, 0.6137, 0.61986, 0.62476, 0.63066, 0.63098,
        0.63122, 0.6415, 0.63726, 0.64132, 0.64476, 0.6468, 0.6458, 0.65018, 0.65316, 0.65524, 0.65748, 0.65764, 0.65814, 0.66, 0.66034, 0.6586, 0.66008, 0.6629, 0.66234, 0.65974, 0.66242, 0.66272, 0.66404, 0.6652, 0.6641],
    [0.001, 0.17514, 0.2619, 0.30432, 0.32704, 0.36912, 0.3851, 0.4012, 0.42244, 0.43056, 0.44104, 0.45716, 0.46868, 0.47834, 0.49308, 0.49138, 0.50834, 0.5114, 0.51704, 0.52298, 0.52468, 0.53442, 0.54068, 0.5444, 0.54962, 0.5556,
        0.5563, 0.5598, 0.5644, 0.56588, 0.56972, 0.57044, 0.5762, 0.57616, 0.57876, 0.58096, 0.58116, 0.5823, 0.57954, 0.58488, 0.58566, 0.58604, 0.58994, 0.59008, 0.58844, 0.59072, 0.5887, 0.5921, 0.58886, 0.5901, 0.59052],
    [0.001, 0.0713, 0.14024, 0.16434, 0.19216, 0.20624, 0.2252, 0.2515, 0.26476, 0.27442, 0.28366, 0.29776, 0.3065, 0.31258, 0.33, 0.34144, 0.35144, 0.34996, 0.36812, 0.3643, 0.37926, 0.37578, 0.38588, 0.38716, 0.39738, 0.39208,
        0.39764, 0.40304, 0.41088, 0.41578, 0.4214, 0.41952, 0.42284, 0.42562, 0.4297, 0.42618, 0.43204, 0.4331, 0.43628, 0.43762, 0.4374, 0.43196, 0.43512, 0.43794, 0.44298, 0.43784, 0.44478, 0.44418, 0.44416, 0.44114, 0.4434]
]


epochs = np.arange(0, 51)

# Erstellen des 3D-Plots
fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111, projection='3d')

for i, pruning_rate in enumerate(pruning_rates):
    ax.plot([pruning_rate]*51, epochs, accuracies_after_retraining[i],
            marker='o', label=f'Pruning Rate {pruning_rate:.4f}')

ax.set_title('Accuracy During Retraining vs Actual Pruning Rate and Epochs')
ax.set_xlabel('Actual Pruning Rate')
ax.set_ylabel('Epochs')
ax.set_zlabel('Accuracy')
ax.legend()
plt.show()
