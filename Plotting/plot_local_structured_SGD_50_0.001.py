import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np

# Daten
pruning_rates = [0.19134368949424185, 0.3822005349688308,
                 0.5728195543418653, 0.7636763998164542]
accuracies_after_pruning = [0.00368, 0.001, 0.001, 0.001]
accuracies_after_retraining = [
    [0.00368, 0.61218, 0.6309, 0.64278, 0.648, 0.65092, 0.65786, 0.66106, 0.66348, 0.66638, 0.67066, 0.67078, 0.6758, 0.67612, 0.6761, 0.67796, 0.6792, 0.68246, 0.68054, 0.6836, 0.68206, 0.68604, 0.68444, 0.6845, 0.68632, 0.6864,
        0.68634, 0.68718, 0.68744, 0.68842, 0.68912, 0.68696, 0.68824, 0.68634, 0.68796, 0.68864, 0.68814, 0.6876, 0.68934, 0.68888, 0.6891, 0.68842, 0.68962, 0.6882, 0.68934, 0.68716, 0.69066, 0.68866, 0.69014, 0.69002, 0.68964],
    [0.001, 0.46878, 0.5186, 0.53986, 0.5609, 0.56966, 0.5798, 0.58944, 0.59396, 0.59848, 0.60244, 0.60498, 0.60834, 0.61422, 0.61648, 0.61856, 0.62032, 0.62172, 0.62524, 0.62552, 0.62936, 0.62786, 0.63066, 0.63044, 0.63074, 0.633,
        0.63216, 0.63276, 0.63204, 0.63512, 0.63506, 0.6364, 0.63476, 0.6347, 0.63564, 0.63606, 0.6357, 0.63574, 0.63808, 0.63634, 0.63452, 0.63566, 0.63588, 0.6341, 0.63624, 0.63678, 0.63936, 0.63516, 0.63764, 0.6368, 0.63706],
    [0.001, 0.20096, 0.2962, 0.34492, 0.37886, 0.40876, 0.42, 0.4348, 0.44518, 0.4542, 0.47068, 0.47744, 0.4828, 0.48282, 0.49542, 0.49862, 0.50428, 0.50298, 0.50764, 0.51108, 0.51312, 0.51776, 0.5195, 0.52128, 0.51838, 0.52088,
        0.52236, 0.5238, 0.52308, 0.52574, 0.52818, 0.52844, 0.53154, 0.52522, 0.5267, 0.53012, 0.53104, 0.53118, 0.5309, 0.53374, 0.53148, 0.53324, 0.52986, 0.53374, 0.53422, 0.53128, 0.53426, 0.53236, 0.53412, 0.53142, 0.53528],
    [0.001, 0.05278, 0.08944, 0.12884, 0.14968, 0.18028, 0.1985, 0.21282, 0.22188, 0.22932, 0.23962, 0.25528, 0.26136, 0.26784, 0.2748, 0.27716, 0.28072, 0.28678, 0.28964, 0.29622, 0.30184, 0.30386, 0.30396, 0.30932, 0.30894, 0.31492,
        0.31404, 0.31736, 0.3149, 0.31756, 0.31722, 0.32088, 0.31898, 0.3212, 0.3223, 0.31696, 0.31956, 0.32218, 0.32494, 0.32522, 0.32556, 0.326, 0.32204, 0.32568, 0.32352, 0.32354, 0.32448, 0.32388, 0.32362, 0.32662, 0.32466]
]
epochs = np.arange(0, 51)

# Erstellen des 3D-Plots
fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111, projection='3d')

for i, pruning_rate in enumerate(pruning_rates):
    ax.plot([pruning_rate]*51, epochs, accuracies_after_retraining[i],
            marker='o', label=f'Pruning Rate {pruning_rate:.4f}')

ax.set_title('Accuracy During Retraining vs Actual Pruning Rate and Epochs')
ax.set_xlabel('Actual Pruning Rate')
ax.set_ylabel('Epochs')
ax.set_zlabel('Accuracy')
ax.legend()
plt.show()
