import numpy as np
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt

# Daten f√ºr L1 Pruning (Global Unstructured)
pruning_rates = [0.19134368949424185, 0.3822005349688308,
                 0.5728195543418653, 0.7636763998164542]
accuracies_after_pruning = [0.6955, 0.7105, 0.59608, 0.01362]
accuracies_after_retraining = [
    [0.6955, 0.51214, 0.54736, 0.56066, 0.57578, 0.5907, 0.5909, 0.60278, 0.61098, 0.6167, 0.6258, 0.6375, 0.6392, 0.65188, 0.65676, 0.65974, 0.6681, 0.67082, 0.67894, 0.68268, 0.68212, 0.68174, 0.69052, 0.69234, 0.69728, 0.69962,
     0.70472, 0.70788, 0.70164, 0.70762, 0.70962, 0.71044, 0.7116, 0.7141, 0.71176, 0.71554, 0.7155, 0.71898, 0.71842, 0.71916, 0.72074, 0.72102, 0.72216, 0.72192, 0.7226, 0.72178, 0.72402, 0.72328, 0.72332, 0.72374, 0.72488],
    [0.7105, 0.49038, 0.51518, 0.52882, 0.56872, 0.57064, 0.58236, 0.59738, 0.60474, 0.61992, 0.62848, 0.63548, 0.63998, 0.65012, 0.65172, 0.6585, 0.66904, 0.67682, 0.67966, 0.68352, 0.68586, 0.68506, 0.69224, 0.6934, 0.69644, 0.70226,
     0.70422, 0.70486, 0.7063, 0.706, 0.71148, 0.71164, 0.71404, 0.71476, 0.71482, 0.71588, 0.71706, 0.72056, 0.71862, 0.7199, 0.72044, 0.72042, 0.72062, 0.72084, 0.72286, 0.72478, 0.71878, 0.72324, 0.72338, 0.72458, 0.72226],
    [0.59608, 0.47084, 0.50694, 0.53818, 0.5585, 0.57326, 0.5854, 0.59908, 0.59014, 0.61846, 0.61588, 0.63284, 0.63804, 0.64806, 0.64774, 0.65858, 0.66004, 0.66812, 0.66904, 0.68074, 0.68394, 0.68066, 0.68972, 0.687, 0.69156, 0.6928,
     0.69602, 0.69878, 0.70064, 0.70358, 0.70786, 0.70486, 0.70676, 0.70708, 0.71126, 0.70946, 0.71054, 0.71156, 0.71122, 0.71366, 0.71394, 0.71294, 0.7126, 0.71112, 0.715, 0.71524, 0.7129, 0.7143, 0.71592, 0.71544, 0.71658],
    [0.01362, 0.41168, 0.46332, 0.49496, 0.51884, 0.5288, 0.53538, 0.55532, 0.5683, 0.57096, 0.57562, 0.59082, 0.60196, 0.60106, 0.61358, 0.62228, 0.61852, 0.62538, 0.62648, 0.62872, 0.63234, 0.64566, 0.64342, 0.64708, 0.64564, 0.6508,
     0.65536, 0.6568, 0.65646, 0.66268, 0.66364, 0.66336, 0.66376, 0.6655, 0.66676, 0.66956, 0.66806, 0.66896, 0.67092, 0.66938, 0.6709, 0.6733, 0.6716, 0.67206, 0.67262, 0.67384, 0.67318, 0.6735, 0.67212, 0.67452, 0.6757]
]

epochs = np.arange(0, 51)

# Erstellen des 3D-Plots
fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111, projection='3d')


for i, pruning_rate in enumerate(pruning_rates):
    ax.plot([pruning_rate]*51, epochs, accuracies_after_retraining[i],
            marker='o', label=f'Pruning Rate {pruning_rate:.4f}')

ax.set_title('Accuracy During Retraining vs Actual Pruning Rate and Epochs')
ax.set_xlabel('Actual Pruning Rate')
ax.set_ylabel('Epochs')
ax.set_zlabel('Accuracy')
ax.legend()
plt.show()
